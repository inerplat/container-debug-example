name: Java

on:
  create:
    tags:
      - v*
  workflow_dispatch:

jobs:
  jar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v2.3.0
        with:
          java-version: 11
          distribution: adopt

      - name: Add +x permission
        run: chmod +x gradlew

      - name: Gradle Build
        run: ./gradlew clean build -x test

      - name: Upload jar file to Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            memory-leak/build/libs/memory-leak.jar
            wrong-db-port/build/libs/wrong-db-port.jar
            insert-file/build/libs/insert-file.jar
          retention-days: 1


  container-build:
    needs: jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download app from Artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      - run: find . -name "*.jar"

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Create symbolic link
        run: |
          ln -s "$(pwd)/build" memory-leak/build
          ln -s "$(pwd)/build" wrong-db-port/build
          ln -s "$(pwd)/build" insert-file/build


      - name: Docker Build
        working-directory: memory-leak
        run: docker buildx build --platform linux/amd64,linux/arm64 -t inerplat/container-build-example:memory-leak --push .

      - name: Docker Build
        working-directory: wrong-db-port
        run: docker buildx build --platform linux/amd64,linux/arm64 -t inerplat/container-build-example:wrong-db-port --push .

      - name: Docker Build
        working-directory: insert-file
        run: docker buildx build --platform linux/amd64,linux/arm64 -t inerplat/container-build-example:insert-file --push .